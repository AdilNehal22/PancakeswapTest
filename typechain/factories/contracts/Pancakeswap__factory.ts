/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Pancakeswap,
  PancakeswapInterface,
} from "../../contracts/Pancakeswap";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arg0",
        type: "address",
      },
      {
        internalType: "address",
        name: "arg1",
        type: "address",
      },
    ],
    name: "getPath",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pancakeswapRouter",
    outputs: [
      {
        internalType: "contract IPancakeRouter01",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "swappingETHForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "swappingExactEthForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
    ],
    name: "swappingExactTokensForEth",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "swappingExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
    ],
    name: "swappingTokensForExactETH",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
    ],
    name: "swappingTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261000f42607861004a565b60015534801561001e57600080fd5b50600080546001600160a01b0319167310ed43c718714eb63d5aa57b78b54704e256024e179055610070565b6000821982111561006b57634e487b7160e01b600052601160045260246000fd5b500190565b610e058061007f6000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806329dcb0cf146100885780633431cd9b146100a45780634e4876e4146100c45780638a9b987e146100d75780638e748a50146100ea578063d6810cfb146100fd578063d88e3e3b14610110578063db6754ed14610130578063f90e01791461015b575b600080fd5b61009160015481565b6040519081526020015b60405180910390f35b6100b76100b2366004610c21565b61016e565b60405161009b9190610cff565b6100b76100d2366004610bc3565b61032b565b6100b76100e5366004610c21565b61043f565b6100b76100f8366004610be8565b610578565b6100b761010b366004610bc3565b6107a6565b61012361011e366004610aa4565b6107fb565b60405161009b9190610cec565b600054610143906001600160a01b031681565b6040516001600160a01b03909116815260200161009b565b6100b7610169366004610be8565b610888565b6040516323b872dd60e01b81526060906001600160a01b038416906323b872dd906101a190339030908a90600401610caf565b602060405180830381600087803b1580156101bb57600080fd5b505af11580156101cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f39190610ba1565b5060405163095ea7b360e01b81526001600160a01b0384169063095ea7b390610236907310ed43c718714eb63d5aa57b78b54704e256024e908990600401610cd3565b602060405180830381600087803b15801561025057600080fd5b505af1158015610264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102889190610ba1565b50600080546001600160a01b03166338ed173987876102a788886107fb565b306001546040518663ffffffff1660e01b81526004016102cb959493929190610d78565b600060405180830381600087803b1580156102e557600080fd5b505af11580156102f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103219190810190610add565b9695505050505050565b60008054604080516315ab88c960e31b81529051606093926001600160a01b031691637ff36ab59187916103be91859163ad5c4648916004808301926020929190829003018186803b15801561038057600080fd5b505afa158015610394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b89190610a80565b876107fb565b336001546040518563ffffffff1660e01b81526004016103e19493929190610d43565b600060405180830381600087803b1580156103fb57600080fd5b505af115801561040f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104379190810190610add565b949350505050565b6040516323b872dd60e01b81526060906001600160a01b038416906323b872dd9061047290339030908990600401610caf565b602060405180830381600087803b15801561048c57600080fd5b505af11580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610ba1565b5060405163095ea7b360e01b81526001600160a01b0384169063095ea7b390610507907310ed43c718714eb63d5aa57b78b54704e256024e908890600401610cd3565b602060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105599190610ba1565b50600080546001600160a01b0316638803dbee87876102a788886107fb565b6040516323b872dd60e01b81526060906001600160a01b038316906323b872dd906105ab90339030908890600401610caf565b602060405180830381600087803b1580156105c557600080fd5b505af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190610ba1565b5060405163095ea7b360e01b81526001600160a01b0383169063095ea7b390610640907310ed43c718714eb63d5aa57b78b54704e256024e908790600401610cd3565b602060405180830381600087803b15801561065a57600080fd5b505af115801561066e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106929190610ba1565b5060008054604080516315ab88c960e31b815290516001600160a01b0390921691634a25d94a9188918891610723918991879163ad5c464891600480820192602092909190829003018186803b1580156106eb57600080fd5b505afa1580156106ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011e9190610a80565b306001546040518663ffffffff1660e01b8152600401610747959493929190610d78565b600060405180830381600087803b15801561076157600080fd5b505af1158015610775573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261079d9190810190610add565b95945050505050565b60008054604080516315ab88c960e31b81529051606093926001600160a01b03169163fb3bdb419187916103be91859163ad5c4648916004808301926020929190829003018186803b15801561038057600080fd5b60408051600280825260608083018452926000929190602083019080368337019050509050838160008151811061083457610834610db4565b60200260200101906001600160a01b031690816001600160a01b031681525050828160018151811061086857610868610db4565b6001600160a01b0390921660209283029190910190910152905092915050565b6040516323b872dd60e01b81526060906001600160a01b038316906323b872dd906108bb90339030908990600401610caf565b602060405180830381600087803b1580156108d557600080fd5b505af11580156108e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090d9190610ba1565b5060008054604080516315ab88c960e31b815290516001600160a01b03909216916318cbafe59188918891610966918991879163ad5c464891600480820192602092909190829003018186803b1580156106eb57600080fd5b336001546040518663ffffffff1660e01b815260040161098a959493929190610d78565b600060405180830381600087803b1580156109a457600080fd5b505af11580156109b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109e09190810190610add565b60405163095ea7b360e01b81529091506001600160a01b0384169063095ea7b390610a25907310ed43c718714eb63d5aa57b78b54704e256024e908990600401610cd3565b602060405180830381600087803b158015610a3f57600080fd5b505af1158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a779190610ba1565b50949350505050565b600060208284031215610a9257600080fd5b8151610a9d81610de0565b9392505050565b60008060408385031215610ab757600080fd5b8235610ac281610de0565b91506020830135610ad281610de0565b809150509250929050565b60006020808385031215610af057600080fd5b82516001600160401b0380821115610b0757600080fd5b818501915085601f830112610b1b57600080fd5b815181811115610b2d57610b2d610dca565b8060051b604051601f19603f83011681018181108582111715610b5257610b52610dca565b604052828152858101935084860182860187018a1015610b7157600080fd5b600095505b83861015610b94578051855260019590950194938601938601610b76565b5098975050505050505050565b600060208284031215610bb357600080fd5b81518015158114610a9d57600080fd5b60008060408385031215610bd657600080fd5b823591506020830135610ad281610de0565b600080600060608486031215610bfd57600080fd5b83359250602084013591506040840135610c1681610de0565b809150509250925092565b60008060008060808587031215610c3757600080fd5b84359350602085013592506040850135610c5081610de0565b91506060850135610c6081610de0565b939692955090935050565b600081518084526020808501945080840160005b83811015610ca45781516001600160a01b031687529582019590820190600101610c7f565b509495945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b602081526000610a9d6020830184610c6b565b6020808252825182820181905260009190848201906040850190845b81811015610d3757835183529284019291840191600101610d1b565b50909695505050505050565b848152608060208201526000610d5c6080830186610c6b565b6001600160a01b03949094166040830152506060015292915050565b85815284602082015260a060408201526000610d9760a0830186610c6b565b6001600160a01b0394909416606083015250608001529392505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610df557600080fd5b5056fea164736f6c6343000806000a";

type PancakeswapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PancakeswapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Pancakeswap__factory extends ContractFactory {
  constructor(...args: PancakeswapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Pancakeswap> {
    return super.deploy(overrides || {}) as Promise<Pancakeswap>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Pancakeswap {
    return super.attach(address) as Pancakeswap;
  }
  override connect(signer: Signer): Pancakeswap__factory {
    return super.connect(signer) as Pancakeswap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PancakeswapInterface {
    return new utils.Interface(_abi) as PancakeswapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Pancakeswap {
    return new Contract(address, _abi, signerOrProvider) as Pancakeswap;
  }
}
